openapi: 3.1.1
info:
  description: API zur Verwaltung der Pflanzen in der BotaniCare-App.
  title: BotaniCare API
  version: 1.0.0
servers:
- url: /
paths:
  /plants:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Plant'
                type: array
          description: Liste aller Pflanzen
      summary: Alle Pflanzen abrufen
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plant'
        description: Die zu erstellende Pflanze
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
          description: Pflanze erfolgreich erstellt
        "400":
          description: Ungültige Anfrage
      summary: Eine neue Pflanze erstellen
      x-content-type: application/json
      x-accepts: application/json
  /plants/{id}:
    delete:
      parameters:
      - description: ID der zu löschenden Pflanze
        explode: false
        in: path
        name: id
        required: true
        schema: {}
        style: simple
      responses:
        "204":
          description: Pflanze erfolgreich gelöscht
        "404":
          description: Pflanze nicht gefunden
      summary: Eine Pflanze nach ID löschen
      x-accepts: application/json
    get:
      parameters:
      - description: ID der abzurufenden Pflanze
        explode: false
        in: path
        name: id
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
          description: Pflanze gefunden
        "404":
          description: Pflanze nicht gefunden
      summary: Eine Pflanze nach ID abrufen
      x-accepts: application/json
    put:
      parameters:
      - description: ID der zu aktualisierenden Pflanze
        explode: false
        in: path
        name: id
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plant'
        description: Pflanze mit den aktualisierten Informationen
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
          description: Pflanze erfolgreich aktualisiert
        "400":
          description: Ungültige Anfrage
        "404":
          description: Pflanze nicht gefunden
      summary: Eine bestehende Pflanze aktualisieren
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    Plant:
      example:
        lightLevel: ""
        wateringFrequency: ""
        name: ""
        location: ""
        id: ""
        type: ""
        waterRequirement: ""
        wateringDate: ""
      properties:
        id:
          description: Die ID der Pflanze
        name:
          description: Der Name der Pflanze
        type:
          description: Der Typ der Pflanze
        location:
          description: Der Standort der Pflanze
        waterRequirement:
          description: Der Wasserbedarf der Pflanze
        lightLevel:
          description: Der Lichtbedarf der Pflanze
        wateringDate:
          description: Datum der letzten Bewässerung
          format: date
        wateringFrequency:
          description: Bewässerungshäufigkeit in Tagen

