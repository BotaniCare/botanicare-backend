openapi: 3.0.0

info:
  title: BotaniCare API
  description: API zur Verwaltung der Pflanzen in der BotaniCare-App.
  version: 1.0.0

tags:
  - name: Plant
    description: All endpoints for the plant
  - name: Room
    description: All endpoints for the room

paths:
  /plants:
    get:
      summary: Returns a list with all stored plants
      operationId: getAllPlants
      tags:
        - Plant
      responses:
        '200':
          description: List with all plants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'
    post:
      summary: Add a new plant
      operationId: addNewPlant
      tags:
        - Plant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plant'
      responses:
        '201':
          description: Created the plant successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
        '400':
          description: Invalid request
        '501':
          description: Internal server error

  /plants/{id}:
    get:
      summary: Returns a list by its id
      operationId: getPlantById
      tags:
        - Plant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Matching plant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
        '404':
          description: Plant not found
    put:
      summary: Update an existing plant
      operationId: updatePlant
      tags:
        - Plant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plant'
      responses:
        '200':
          description: Plant was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
        '404':
          description: Plant not found
        '501':
          description: Internal server error
    delete:
      summary: Delete a plant by its id
      operationId: deletePlantById
      tags:
        - Plant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Plant was deleted successfully
        '404':
          description: Plant was not found
        '501':
          description: Internal server error

  /rooms:
    get:
      operationId: getAllRooms
      responses:
        '200':
          description: All rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '500':
          description: Internal server error
    post:
      operationId: addNewRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
      responses:
        '200':
          description: The room was created
        '500':
          description: Internal server error

  /rooms/{roomName}:
    delete:
      operationId: deleteRoomByRoomName
      parameters:
        - name: roomName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room was deleted
        '404':
          description: Room not found
        '500':
          description: Internal server error
    get:
      operationId: getRoomByName
      parameters:
        - name: roomName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The matching room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '404':
          description: Room not found
        '500':
          description: Internal server error

  /rooms/{roomName}/plants/{plantId}:
    delete:
      operationId: removePlantFromRoom
      parameters:
        - name: roomName
          in: path
          required: true
          schema:
            type: string
        - name: plantId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Plant was removed from room
        '404':
          description: Plant or room not found
        '500':
          description: Internal server error
    get:
      operationId: addPlantToRoom
      parameters:
        - name: roomName
          in: path
          required: true
          schema:
            type: string
        - name: plantId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Plant was added to group
        '404':
          description: Room or plant not found
        '500':
          description: Internal server error



components:
  schemas:

    Room:
      type: object
      properties:
        id:
          type: integer
        roomName:
          type: string
        plants:
          type: array
          items:
            $ref: '#/components/schemas/Plant'

    PlantPicture:
      type: object
      properties:
        id:
          type: integer
        plantPicture:
          type: string
          format: byte

    Plant:
      type: object
      properties:
        id:
          type: integer
          description: Die ID der Pflanze
        name:
          type: string
          description: Der Name der Pflanze
        type:
          type: string
          description: Der Typ der Pflanze
        waterNeed:
          type: string
          description: Der Wasserbedarf der Pflanze
        sunLight:
          type: string
          description: Der Lichtbedarf der Pflanze
        plantPicture:
          $ref: '#/components/schemas/PlantPicture'